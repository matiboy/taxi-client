{
  "name": "ui-router",
  "version": "0.0.1",
  "main": "./release/angular-ui-router.min.js",
  "dependencies": {
    "angular": ">= 1.0.6"
  },
  "gitHead": "18af2c4404b5cdc435c427bbd668d075b4830bc0",
  "readme": "[![Build Status](https://travis-ci.org/angular-ui/ui-router.png?branch=master)](https://travis-ci.org/angular-ui/ui-router)\r\n\r\n# UI-Router\r\n\r\n**Attention**: UI-Router uses <code>grunt >= 0.4.x</code> make sure to upgrade your environment and read the\r\n[Migration Guide](http://gruntjs.com/upgrading-from-0.3-to-0.4).\r\n\r\nFinally a de-facto solution to nested views and routing.\r\n\r\n\r\n## Main Goal\r\nTo evolve the concept of an Angular \"Route\" into a more general concept of a \"State\" for managing complex application UI states.\r\n\r\n## Main Features\r\n1. **Robust State Management**\r\n>`$state` and `$stateProvider`\r\n\r\n2. **More Powerful Views**\r\n>`ui-view` directive (used in place of `ng-view`)\r\n\r\n3. **Named Views**\r\n>`<div ui-view=\"chart\">`\r\n\r\n4. **Multiple Parallel Views**\r\n>\r\n```\r\n<div ui-view=\"chart1\">\r\n<div ui-view=\"chart2\">\r\n```\r\n5. **Nested Views**\r\n>load templates that contain nested `ui-view`s as deep as you'd like.\r\n\r\n6. **Routing**\r\n>States can map to URLs (though it's not required)\r\n\r\n\r\n*Basically, do whatever you want with states and routes.*\r\n\r\n\r\n## Resources\r\n\r\n* [In-Depth Overview](https://github.com/angular-ui/ui-router/wiki)\r\n* [FAQ](https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions)\r\n* [Sample App](http://angular-ui.github.com/ui-router/sample/) ([Source](https://github.com/angular-ui/ui-router/tree/master/sample))\r\n* [Generated Docs](http://angular-ui.github.com/ui-router/build/doc/)\r\n* Latest build: [angular-ui-states.min.js](http://angular-ui.github.com/ui-router/build/angular-ui-states.min.js)\r\n  (uncompressed [angular-ui-states.js](http://angular-ui.github.com/ui-router/build/angular-ui-states.js))\r\n\r\n## Quick Start\r\n1. Add angular-ui-states.min.js to your index.html\r\n>\r\n```html\r\n<!doctype html>\r\n<html ng-app=\"myapp\">\r\n<head>\r\n      <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.0.6/angular.min.js\"></script>\r\n      <script src=\"angular-ui-states.js\"></script>\r\n```\r\n\r\n2. Add one or more `ui-view` to your app, give them names.\r\n>\r\n```html\r\n<body>\r\n    <div ui-view=\"viewA\"></div>\r\n    <div ui-view=\"viewB\"></div>\r\n    <!-- Also a way to navigate -->\r\n    <a href=\"#/route1\">Route 1</a>\r\n    <a href=\"#/route2\">Route 2</a>\r\n</body>\r\n```\r\n\r\n3. Set `ui.state` as a dependency in your module\r\n>\r\n```javascript\r\nvar myapp = angular.module('myapp', ['ui.state']) \r\n```\r\n\r\n4. Set up your states in the module config\r\n>\r\n```javascript\r\nmyapp.config(function($stateProvider, $routeProvider){\r\n  $stateProvider\r\n\t\t.state('index', {\r\n\t\t\turl: \"\", // root route\r\n\t\t\tviews: {\r\n\t\t\t\t\"viewA\": {\r\n\t\t\t\t\ttemplateUrl: \"index.viewA.html\"\r\n\t\t\t\t},\r\n\t\t\t\t\"viewB\": {\r\n\t\t\t\t\ttemplateUrl: \"index.viewB.html\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\t.state('route1', {\r\n\t\t\turl: \"/route1\",\r\n\t\t\tviews: {\r\n\t\t\t\t\"viewA\": {\r\n\t\t\t\t\ttemplateUrl: \"route1.viewA.html\"\r\n\t\t\t\t},\r\n\t\t\t\t\"viewB\": {\r\n\t\t\t\t\ttemplateUrl: \"route1.viewB.html\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\t.state('route2', {\r\n\t\t\turl: \"/route2\",\r\n\t\t\tviews: {\r\n\t\t\t\t\"viewA\": {\r\n\t\t\t\t\ttemplateUrl: \"route2.viewA.html\"\r\n\t\t\t\t},\r\n\t\t\t\t\"viewB\": {\r\n\t\t\t\t\ttemplateUrl: \"route2.viewB.html\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n})\r\n```\r\n\r\n5. See this quick start example working. \r\n>**[Go to Quick Start Plunker](http://plnkr.co/edit/vDURUN?p=preview)**\r\n\r\n6. This only scratches the surface! You've only seen Named Views and Parallel Views. Learn more about `state()` options, Nested Views, URL routing options, backwards compatibility, and more! \r\n>**[Dive Deeper!](https://github.com/angular-ui/ui-router/wiki)**\r\n\r\n## Developing\r\n\r\nDependencies for building the solution and running tests:\r\n\r\n* [grunt-cli](https://github.com/gruntjs/grunt-cli) - run: `$ npm install -g grunt-cli`\r\n* Then install development dependencies with: `$ npm install`\r\n\r\nThere is a number of targets in the gruntfile that is used to building the solution, documents etc.\r\n\r\n* `grunt`: Perform a normal build, runs jshint and karma tests\r\n* `grunt build`: Perform a normal build\r\n* `grunt dist`: Perform a clean build and generate documentation\r\n* `grunt dev`: Run dev server (sample app) and watch for changes, builds and runs karma tests on changes.\r\n\r\n",
  "readmeFilename": "README.md",
  "_id": "ui-router@0.0.1",
  "description": "[![Build Status](https://travis-ci.org/angular-ui/ui-router.png?branch=master)](https://travis-ci.org/angular-ui/ui-router)",
  "repository": {
    "type": "git",
    "url": "git://github.com/angular-ui/ui-router"
  }
}